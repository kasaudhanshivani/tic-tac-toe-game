let boxes = document.querySelectorAll(".box");
let resetBtn = document.querySelector("#reset-btn");
let newGameBtn = document.querySelector("#new-btn");
let msgContainer = document.querySelector(".msg-container");
let msg = document.querySelector("#msg");
let scoreX = 0;
let scoreO = 0;

let playerX = true; // Player X starts the game
let count = 0; // Counter to track moves

const winPatterns = [
    [0, 1, 2], [0, 3, 6], [0, 4, 8],
    [1, 4, 7], [2, 5, 8], [2, 4, 6],
    [3, 4, 5], [6, 7, 8]
];

// Function to reset the game
const resetGame = () => {
    playerX = true;
    count = 0;
    enableBoxes();
    msgContainer.classList.add("hide");
    msg.innerText = ""; // Clear any previous messages
};

// Function to handle player moves
boxes.forEach((box, index) => {
    box.addEventListener("click", () => {
        if (box.innerText === "") {
            box.innerText = playerX ? "X" : "O";
            count++;
            if (checkWinner()) {
                showWinner(playerX ? "X" : "O");
            } else if (count === 9) {
                gameDraw();
            } else {
                playerX = !playerX; // Switch player turn
            }
        }
    });
});

// Function to check for a winner
const checkWinner = () => {
    for (let pattern of winPatterns) {
        let [a, b, c] = pattern;
        if (boxes[a].innerText !== "" &&
            boxes[a].innerText === boxes[b].innerText &&
            boxes[a].innerText === boxes[c].innerText) {
            return true; // Winning pattern found
        }
    }
    return false; // No winner yet
};

// Function to handle a draw
const gameDraw = () => {
    msg.innerText = "Game Draw";
    msgContainer.classList.remove("hide");
    disableBoxes();
};

// Function to disable game boxes/buttons
const disableBoxes = () => {
    for (let box of boxes) {
        box.disabled = true;
    }
};

// Function to enable game boxes/buttons
const enableBoxes = () => {
    for (let box of boxes) {
        box.disabled = false;
        box.innerText = "";
    }
};

// Function to display the winner and update the score
const showWinner = (winner) => {
    msg.innerText = `Congratulations, Winner is ${winner}`;
    if (winner === "X") {
        scoreX++;
    } else {
        scoreO++;
    }
    msg.innerText += `\nScore: X ${scoreX} - ${scoreO} O`;
    msgContainer.classList.remove("hide");
    disableBoxes();
    // Show new game button
    newGameBtn.style.display = "block";
};

// Event listener for new game button
newGameBtn.addEventListener("click", () => {
    resetGame();
    newGameBtn.style.display = "none"; // Hide new game button
});

// Event listener for reset button
resetBtn.addEventListener("click", resetGame);

// Initialize the game
resetGame();
